name: Deploy Azure function

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
      resource_group:
        required: true
        description: The resource group of the function to deploy
        type: string
      app_name:
        required: true
        description: The name of the function to deploy
        type: string
      registry_image:
        required: true
        description: The name of the image from container registry to be used
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  show_input:
    runs-on: ubuntu-latest
    if: ${{ inputs.target == inputs.environment }}
    steps:
      - name: Get input parameters
        run: |
          echo environment=${{ inputs.environment }}
          echo target=${{ inputs.target }}
          echo resource_group=${{ inputs.resource_group }}
          echo app_name=${{ inputs.app_name }}
          echo registry_image=${{ inputs.registry_image }}
          

  # Starting the Azure Function's staging slot, if deploying in PROD
  start_staging_slot:
    name: Create staging slots
    runs-on: ubuntu-22.04
    if: ${{ inputs.target == inputs.environment && inputs.target == 'prod' }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Create staging slots
        uses: pagopa/github-actions-template/azure-function-start-staging-slot@a1b72480e9ac555364be0b7ecdcc8f5ab1c89ad9
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group: ${{ inputs.resource_group }}
          app_name: ${{ inputs.app_name }}
          registry_image: ${{ inputs.registry_image }}


  # Executing the deploy of the Azure function with the new image
  deploy:
    name: Deploy Azure Function
    runs-on: ubuntu-22.04
    needs: [ start_staging_slot ]
    if: ${{ always() && inputs.target == inputs.environment }}
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Deploy Azure Function
        uses: pagopa/github-actions-template/azure-functions-deploy@a1b72480e9ac555364be0b7ecdcc8f5ab1c89ad9
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          app_name: ${{ inputs.app_name }}
          registry_image: ${{ inputs.registry_image }}


  # Stopping the Azure Function's staging slot, if deploying in PROD
  stop_staging_slot:
    name: Clean staging slots
    needs: [ start_staging_slot, deploy ]
    if: ${{ success() || failure() && (inputs.target == inputs.environment && inputs.target == 'prod') }}
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Deploy Azure Function
        uses: pagopa/github-actions-template/azure-function-stop-staging-slot@a1b72480e9ac555364be0b7ecdcc8f5ab1c89ad9
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group: ${{ inputs.resource_group }}
          app_name: ${{ inputs.app_name }}
          registry_image: ${{ inputs.registry_image }}
