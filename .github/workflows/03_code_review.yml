name: Code Review

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_KEY: pagopa_pagopa-taxonomy


permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  code-review:
    name: Code Review
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Code Review
        uses: pagopa/github-actions-template/maven-code-review@v1.8.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: ${{env.PROJECT_KEY}}
          coverage_exclusions: "**/config/*,**/*Mock*,**/model/**,**/entity/*"
          cpd_exclusions: "**/model/**,**/entity/*"
          java_version: '17'

#  smoke-test:
#    name: Smoke Test
#    runs-on: ubuntu-latest
#    environment:
#      name: dev
#    steps:
#      - name: Checkout
#        id: checkout
#        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707
#
#      - name: Login
#        id: login
#        # from https://github.com/Azure/login/commits/master
#        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
#        with:
#          client-id: ${{ secrets.CLIENT_ID }}
#          tenant-id: ${{ secrets.TENANT_ID }}
#          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
#
#      - name: Run Service on Docker
#        shell: bash
#        run: |
#          cd ./docker
#          chmod +x ./run_docker.sh
#          ./run_docker.sh local
#
#      - name: Run Integration Tests
#        shell: bash
#        run: |
#          export CANARY=${{ inputs.canary }}
#          export CUCUMBER_PUBLISH_TOKEN=${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
#          export EVENT_HUB_TX_PRIMARY_KEY=${{ secrets.EVENT_HUB_TX_PRIMARY_KEY }}
#          export COSMOS_DB_PRIMARY_KEY=${{ secrets.COSMOS_DB_PRIMARY_KEY }}
#          export EVENTHUB_CONN_STRING=${{secrets.EVENTHUB_CONN_STRING}}
#
#          cd ./integration-test
#          chmod +x ./run_integration_test.sh
#          ./run_integration_test.sh local
